{{#extend "admin_base"}}

  {{#content "title"}} - Admin{{/content}}


  {{#content "pagebody"}}

  <!-- Modal Dialogues -->
  <div class="modal fade" id="delete-confirm-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          {{! <h4> must be under <button>, otherwise they will be on separate lines }}
          <h4 class="modal-title">Confirm Your Action</h4>
        </div>
        <div class="modal-body">
          <p>Are you sure you'd want to delete this article? There is no going back!</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-danger" id="delete-selected-button">Delete</button>
        </div>
      </div>
    </div>
  </div>


  <!-- Main Content Block -->

  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <h1 class="page-header">Article List</h1>

        <div class="panel panel-default">

          <div class="panel-heading">
            Article List
          </div>

          <div class="panel-body">

            <!-- <label for="number-selector">Number of entries to show</label> -->
            <!-- <select -->
            <!--       class="form-control" -->
            <!--       id="number-selector" -->
            <!--       style="margin-bottom: 2em;" -->
            <!--       onchange="setListLimit(this)"> -->
            <!--   <option value="10">Less</option> -->
            <!--   <option value="25" selected>Default</option> -->
            <!--   <option value="50">More</option> -->
            <!--   <option value="1e+20">All</option> -->
            <!-- </select> -->

            <table class="table table-hover table-bordered" id="article-table">
              <thead>
                <th>#</th>
                <th>title</th>
                <th>publish_time</th>
                <th>content</th>
              </thead>
              <tbody>
                <!-- default data -->
                <!-- <tr> -->
                <!--   <td>1</td> -->
                <!--   <td>uvuvewvwev</td> -->
                <!--   <td>1970-01-01</td> -->
                <!--   <td>nyaaaaaaan</td> -->
                <!-- </tr> -->
              </tbody>
            </table>

          </div>
          <!-- panel-body -->

        </div>
        <!-- panel-default -->

      </div>
      <!-- col -->

    </div>
    <!-- row -->


  </div>
  <!-- container -->

  {{/content}}


  {{#content "inlinejs"}}
  <script type="text/javascript">

    //////// Helper Functions ////////

    function reRenderTable(tab, data) {
      return tab.DataTable()
      .clear()          // clear all data
      .rows.add(data)   // re-fill with new data
      .draw();          // render and return
    }


    function setListLimit(e) {
      document.gCurrentListLimit = e.value;
      console.log(`document.gCurrentListLimit ==> ${e.value}`);
      return e;
    }


    //////// Jobs ////////

    $(document).ready(function() {

      //// Init DataTables ////

      // HACK: query start_time, binded to the current page object,
      //       should be early enough
      document.gCurrentStartTime = new Date('1970-01-10');
      document.gCurrentListLimit = 1e+10;   // HACK: Fake unlimited
      // retrieve data from server
      $.ajax({
        url: "/article_list/list",
        method: "GET",
        data: {
          "start_time": document.gCurrentStartTime,
          "limit": document.gCurrentListLimit
        },
        success: (data) => {
          if (data.code === 200) {    // success code
            // initalize DataTables
            // NOTE: Init only ONCE!
            let table = $("#article-table").DataTable({
              responsive: true,
              // paging: false,
              lengthMenu: [
                [10, 25, 50, 1e+20],
                ["Less", "Medium", "More", "All"]
              ],
              select: "single",
              dom: "B<fl<t>ip>",
              buttons: [
                "colvis",
                {   // button jumping to editing page
                  extend: "selected",
                  text: "Edit",
                  action: function(e, dt, but, conf) {
                    console.log(`Edit button pressed!`)
                  }
                },
                {   // button to delete selected article
                  extend: "selected",
                  text: "Delete",
                  action: function(e, dt, but, conf) {
                    console.log(`Delete button pressed!`);
                    $("#delete-confirm-modal").modal("show");
                  }
                }
              ],
              data: data.data,
              columns: [
                { "data": "ID" },
                { "data": "title" },
                { "data": "publish_time" },
                { "data": "content" }
              ],
            });
            // bind custom events after creation
            // NOTE: Use native components and events
            // table.on("length.dt", function(e, settings, length) {
            //   console.log(`page length changed to ${length}`);
            // });
          } else {    // request error
            console.log(`Request Failed with: `, data);
          }
        },
        error: (ret) => {
          console.log(ret);
        }
      });


      //// Register Events Handlers ////

      $("#delete-selected-button").on("click", function() {
        let tab = $("#article-table").DataTable();    // get API
        let sel = tab.rows({ selected: true }).data();
        $.ajax({
          url: "/article_list/delete_article",
          type: "POST",
          data: { publish_time: sel[0]["publish_time"] },
          success: function(data) {
            console.log(data);
            if (data.code === 200) {
              // refresh DataTable with new data
              $.ajax({
                url: "/article_list/list",
                method: "GET",
                data: {
                  "start_time": document.gCurrentStartTime,
                  "limit": document.gCurrentListLimit
                },
                success: (data) => {
                  if (data.code === 200) {
                    // refresh table
                    reRenderTable($("#article-table"), data.data);
                    // back to main view
                    $("#delete-confirm-modal").modal("hide");
                  } else {
                    console.log(`Failed to retrieve data from server`);
                  }
                }
              });   // ajax get list
            } else {
              console.log(`Deletion failed with ${data}`);
            }
          }
        }); // ajax post delete
      });

    }); // $(document).ready()

  </script>
  {{/content}}

{{/extend}}
